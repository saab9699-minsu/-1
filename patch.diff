From 35f026004d261274dce96aee5db465e7efff0e72 Mon Sep 17 00:00:00 2001
From: Lee Minsu <saab9699@hanmail.net>
Date: Wed, 28 Aug 2024 16:14:57 +0900
Subject: [PATCH] =?UTF-8?q?=EA=B1=B4=EC=9D=98=EC=82=AC=ED=95=AD=20?=
 =?UTF-8?q?=EC=B6=94=EA=B0=80?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 cafe/forms.py                      |  2 +-
 cafe/templates/main.html           |  2 +-
 cafe/templates/menu_detail.html    |  8 +++---
 cafe/urls.py                       |  1 +
 cafe/views.py                      | 32 +++++++-----------------
 users/forms.py                     |  2 +-
 users/templates/feedback.html      | 15 +++++++++++
 users/templates/feedback_edit.html |  6 +++++
 users/urls.py                      |  4 ++-
 users/views.py                     | 40 ++++++++++++++++++++++++------
 10 files changed, 74 insertions(+), 38 deletions(-)
 create mode 100644 users/templates/feedback_edit.html

diff --git a/cafe/forms.py b/cafe/forms.py
index 0f50498..8d5dd8f 100644
--- a/cafe/forms.py
+++ b/cafe/forms.py
@@ -5,8 +5,8 @@ class CommentForm(forms.ModelForm):
     class Meta: 
         model = Comment
         fields = [ 
+            "menu_id",
             "content",
-            "menu_id"
         ]
         widgets = {
             "content" : forms.Textarea(
diff --git a/cafe/templates/main.html b/cafe/templates/main.html
index 0eed9bc..1d9088a 100644
--- a/cafe/templates/main.html
+++ b/cafe/templates/main.html
@@ -143,7 +143,7 @@
                         style="background-color: rgb(240, 252, 133);"
                     {% endif %}>{{ menu.brand }}</h2>
                 </div>
-                <a href=""><img src="{{ menu.img }}"></a>
+                <a href="{% url 'cafe:detail' post_id=menu.id %}"><img src="{{ menu.img }}"></a>
                 <div class="kcal_table">
                     <div class="kcal">
                         <div>
diff --git a/cafe/templates/menu_detail.html b/cafe/templates/menu_detail.html
index 12eeedc..6e3599b 100644
--- a/cafe/templates/menu_detail.html
+++ b/cafe/templates/menu_detail.html
@@ -43,13 +43,13 @@
         <small>{{ post.created }}</small>
         <div>
         <!-- action 속성을 "댓글 추가" View 를 가리키는 URL 로 지정 -->
-        <form method = "POST">
+        <form method="POST" action="{% url 'cafe:comment_add' id=menu.id %}">
             {% csrf_token %}
             <!-- 사용자가 직접 입력하지 않는 고정된 데이터를 form 내부에 위치 -->
-                <input type = "hidden" name = "post" value = "{{ menu.id }}">
-            <!-- 전달된 comment_form 의 필드 중, "content" 필드만 렌더링 -->
+            <input type="hidden" name="menu_id" value="{{ menu.id }}">
+            <!-- 전달된 comment_form의 필드 중, "content" 필드만 렌더링 -->
             {{ comment_form.content }}
-            <button type = "submit">게시</button>
+            <button type="submit">게시</button>
         </form>
         </div>
     </body>
diff --git a/cafe/urls.py b/cafe/urls.py
index 2908010..6050dda 100644
--- a/cafe/urls.py
+++ b/cafe/urls.py
@@ -5,4 +5,5 @@ app_name = "cafe"
 urlpatterns = [
     path("menu/<int:post_id>/", views.menu_detail, name = "detail" ),
     path("main/", views.main, name="main"),
+    path("comment_add/<int:id>/", views.comment_add, name="comment_add")
 ]
\ No newline at end of file
diff --git a/cafe/views.py b/cafe/views.py
index ec7cd66..b2620d9 100644
--- a/cafe/views.py
+++ b/cafe/views.py
@@ -42,36 +42,22 @@ def menu_like(request, post_id) :
 
 
 # 댓글 작성을 처리할 View, POST 요청만 허용 
+
 @require_POST
-def comment_add(request): 
-    # request.POST 로 전달된 데이터를 사용해 CommentForm 인스턴스 생성 
+def comment_add(request, id):
+    # request.POST 로 전달된 데이터를 사용해 CommentForm 인스턴스를 생성
     form = CommentForm(data=request.POST)
 
-    if form.is_valid(): 
-        # comment=False 옵션으로 메모리상에 Comment 객체 생성 
+    if form.is_valid():
+        # comment=False 옵션으로 메모리상에 Comment 객체 생성
         comment = form.save(commit=False)
 
-        # Comment 생성에 필요한 사용자 정보를 request 에서 가져와 할당 
-        comment.user = request.user
+        #Comment 생성에 필요한 사용자 정보를 request 에서 가져와 할당
+        comment.user_id = request.user # request.user : 현재 접속을 한 유저
 
-        # DB에 Comment 객체 저장 
+        # DB 에 comment 객체 저장
         comment.save()
-
-        # 생성된 Comment의 정보 확인 
-        print(comment.id)
-        print(comment.content)
-        print(comment.user_id)
-
-        # URL 로 "next"값을 전달받았다면 댓글 작성 완료 후 전달받은 값으로 이동 
-        if request.GET.get("next"): 
-            url_next = request.GET.get("next")
-
-        # "next" 값을 전달받지 않았다면 피드페이지의 글 위치로 이동 
-        else: 
-            # 생성한 comment 에서 연결된 post 정보를 가져와서 id값을 이용 
-            url_next = reverse("cafe:detail") + f"{comment.post.id}"
-        
-        return redirect(url_next)
+        return redirect("cafe:detail", post_id=id)
     
 @require_POST
 def comment_delete(request, comment_id): 
diff --git a/users/forms.py b/users/forms.py
index 77784f9..1f8221f 100644
--- a/users/forms.py
+++ b/users/forms.py
@@ -11,7 +11,7 @@ class PostForm(forms.ModelForm):
         widgets = {
             "contents": forms.Textarea(
                 attrs={
-                    "placeholder": "댓글 달기....",
+                    "placeholder": "건의 사항....",
                 }
             )
         }
\ No newline at end of file
diff --git a/users/templates/feedback.html b/users/templates/feedback.html
index ad39b40..b343a03 100644
--- a/users/templates/feedback.html
+++ b/users/templates/feedback.html
@@ -6,10 +6,25 @@
     <title>Document</title>
 </head>
 <body>
+    <h1>건의사항</h1>
     <div class="feddback">
+        {% for feedback in feedbacks %}
+            <h3>{{ feedback.title }}</h1>
+            <p>{{ feedback.contents }}</p>
+            {% if user == feedback.user_id %}
+            <form method="POST" action="{% url 'users:feedback_delete' feedback_id=feedback.id %}">
+                {% csrf_token %}
+                <button type="submit">삭제</button>
+            </form>
+            <form action="{% url 'users:feedback_edit' feedback_id=feedback.id %}">
+                <button type="submit">수정</button>
+            </form>
+            {% endif %}
+        {% endfor%}
         <form method="POST">
             {% csrf_token %}
             {{ form.as_p }}
+            <button type="submit">게시</button>
         </form>
     </div>
 </body>
diff --git a/users/templates/feedback_edit.html b/users/templates/feedback_edit.html
new file mode 100644
index 0000000..a1b38d7
--- /dev/null
+++ b/users/templates/feedback_edit.html
@@ -0,0 +1,6 @@
+<!DOCTYPE html>
+<html lang="ko">
+    <body>
+        {{ form.as_p }}
+    </body>
+</html>
\ No newline at end of file
diff --git a/users/urls.py b/users/urls.py
index dfa8784..8b88894 100644
--- a/users/urls.py
+++ b/users/urls.py
@@ -3,5 +3,7 @@ from users import views
 
 app_name = "users"
 urlpatterns = [
-    path("feedback/", views.feedback_add, name = "feedback")
+    path("feedback/", views.feedback, name = "feedback"),
+    path("feedback_delete/<int:feedback_id>/", views.feedback_delete, name="feedback_delete"),
+    path("feedback_edit/<int:feedback_id>/", views.feedback_edit, name="feedback_edit"),
 ]
\ No newline at end of file
diff --git a/users/views.py b/users/views.py
index 65f8f38..620b43f 100644
--- a/users/views.py
+++ b/users/views.py
@@ -1,19 +1,45 @@
-from django.shortcuts import render
+from django.shortcuts import render, redirect, get_object_or_404
+from django.views.decorators.http import require_POST
 from users.forms import PostForm
+from users.models import Post
 
 # Create your views here.
 
-def feedback_add(request):
+# 건의사항 페이지
+def feedback(request):
     if request.method == "POST":
         form = PostForm(request.POST)
 
         if form.is_valid():
-            post = form.save(commit=False)
-            post.user = request.user
-            post.save()
+            feedback = form.save(commit=False)
+            feedback.user_id = request.user
+            feedback.save()
     else:
         form = PostForm()
 
-    context = {"form" : form}
+    feedbacks = Post.objects.all()
+    context = {
+        "feedbacks": feedbacks,
+        "form" : form,
+    }
+    return render(request, "feedback.html", context)
+
+# 건의사항 삭제
+def feedback_delete(request, feedback_id):
+    Post.objects.filter(id=feedback_id).delete()
+    return redirect("users:feedback")
+
+# 건의사항 수정
+def feedback_edit(request, feedback_id):
+    feedback = get_object_or_404(Post, id = feedback_id)
+    if request.method == "POST":
+        form = PostForm(request.POST, instance=feedback)
+        if form.is_valid():
+            feedback = form.save(commit = False)
+            feedback.save()
+            return redirect("users:feedback")
+        
+    else:
+        form = PostForm(instance = feedback) # 수정 대상이 될 데이터를 설정
+    return render(request, "feedback_edit.html", {"form" : form})
 
-    return render(request, "posts/post_add.html", context)
\ No newline at end of file
-- 
2.46.0.windows.1

